package com.app.DatabaseConnecttion;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnector {
	   private static final String JDBC_URL = "jdbc:mysql://localhost:3306/ecommerce";
	    private static final String USERNAME = "root";
	    private static final String PASSWORD = "root";
	    
	    static {
	        try {
	            Class.forName("com.mysql.cj.jdbc.Driver");
	        } catch (ClassNotFoundException e) {
	            e.printStackTrace();
	        }
	    }

	    public static Connection getConnection() throws SQLException {
	        return DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
	    }
	}
package com.app.ecommerce.Test;

import org.testng.annotations.Test;

import com.app.DatabaseConnecttion.ProductDAO;

public class ECommerceApp {
	@Test
	public void testCheckStockAvailability() {
        String productName = "Laptop";
        ProductDAO productDAO = new ProductDAO();
        int stockQuantity = productDAO.getStockQuantity(productName);

        // Display stock information
        System.out.println("====================================");
        System.out.println("|   Stock Availability           |");
        System.out.println("====================================");
        System.out.println("| Product Name | Stock Quantity   |");
        System.out.println("====================================");
        System.out.printf("| %-13s | %-15d |%n", productName, stockQuantity);
        System.out.println("====================================");
    }
}
package com.app.DatabaseConnecttion;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class ProductDAO {
public int getStockQuantity(String productName) {
        int stockQuantity = 0;

        try (Connection connection = DatabaseConnector.getConnection()) {
            String sql = "SELECT stock_quantity FROM products WHERE product_name = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, productName);
                ResultSet resultSet = preparedStatement.executeQuery();

                if (resultSet.next()) {
                    stockQuantity = resultSet.getInt("stock_quantity");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return stockQuantity;
    }	
	
}

//    public List<String> getSimilarProducts(String productName) {
//    	
//    			//======================TO fetch all Products from Db
//    	List<String> allProducts = new ArrayList<>();
//
//        try (Connection connection = DatabaseConnector.getConnection()) {
//            String sql = "SELECT product_name FROM products";
//            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
//                ResultSet resultSet = preparedStatement.executeQuery();
//
//                while (resultSet.next()) {
//                    allProducts.add(resultSet.getString("product_name"));
//                }
//            }
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//        return allProducts;
//    }
//}
============TO Fetch Only similar products from DB
//    	 List<String> similarProducts = new ArrayList<>();
//
//         try (Connection connection = DatabaseConnector.getConnection()) {
//             String sql = "SELECT product_name FROM products WHERE product_name LIKE ?";
//             try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
//                 preparedStatement.setString(1, "%" + productName + "%");
//                 ResultSet resultSet = preparedStatement.executeQuery();
//
//                 while (resultSet.next()) {
//                     similarProducts.add(resultSet.getString("product_name"));
//                 }
//             }
//         } catch (SQLException e) {
//             e.printStackTrace();
//         }
//
//         return similarProducts;
//     }	
//    	
//    }
